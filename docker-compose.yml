version: '3.8'

services:
  weather-api:
    build:
      context: .
      dockerfile: Dockerfile
      cache_from:
        - python:3.12-slim
    image: weather-prediction-api:latest
    container_name: weather-prediction-api
    ports:
      - "8000:8000"
    environment:
      - PORT=8000
      - PYTHONUNBUFFERED=1
      - LOG_LEVEL=info
    volumes:
      - ./logs:/app/logs
      - ./models:/app/models:ro  # Read-only mount for models
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health/"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - weather-net
    deploy:
      resources:
        limits:
          cpus: '2'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M
    labels:
      - "com.weather-api.description=Weather Prediction API for Sydney"
      - "com.weather-api.version=2.0.0"

  # Optional: Nginx reverse proxy for production
  nginx:
    image: nginx:alpine
    container_name: weather-api-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - weather-api
    networks:
      - weather-net
    profiles:
      - production

networks:
  weather-net:
    driver: bridge
    name: weather-prediction-network

volumes:
  logs:
    driver: local